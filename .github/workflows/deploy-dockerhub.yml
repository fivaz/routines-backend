name: Build and Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/routine-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Create necessary secret files
      - name: Create Sentry token file
        run: echo "${{ secrets.SENTRY_AUTH_TOKEN }}" > .sentry-auth-token

      - name: Create application.properties
        run: |
          cat << EOF > src/main/resources/application.properties
          gemini.api.key=${{ secrets.GEMINI_API_KEY }}
          recraft.api.key=${{ secrets.RECRAFT_API_KEY }}
          recraft.style.id=${{ secrets.RECRAFT_STYLE_ID }}
          firebase.storage.bucket=${{ secrets.FIREBASE_STORAGE_BUCKET }}
          frontend.url=${{ secrets.FRONTEND_URL }}
          EOF

      - name: Create Firebase credentials file
        run: |
          echo '${{ secrets.FIREBASE_CREDENTIALS_JSON }}' > src/main/resources/firebase-credentials.json

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and push Docker image
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:latest
          secrets: |
            "sentry_token=.sentry-auth-token"